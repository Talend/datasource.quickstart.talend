{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "EMR + Redshift",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "AWS Security"
                    },
                    "Parameters": [
                        "KeyPair"
                    ]
                },
                {
                    "Label": {
                        "default": "EMR"
                    },
                    "Parameters": [
                        "CreateEmr",
                        "EmrSubnetA",
                        "EmrLogBucket",
						"EMRMasterInstanceType",
                        "EMRCoreInstanceType",
						"EMRCoreNodes"
                    ]
                }
            ]
        }
    },
    "Parameters": {
        "KeyPair": {
            "Description": "Key Name for Instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "CreateEmr": {
            "Description": "Create EMR.",
            "Type": "String",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "EmrSubnetA": {
            "Description": "EMR Subnet A",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "EmrLogBucket": {
            "Description": "EMR Log Bucket",
            "Type": "String"
        },
		"EMRMasterInstanceType": {
            "AllowedValues": [
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge"
            ],
            "Default": "m4.large",
            "Description": "Instance type for the EMR master node. Default is m4.large",
            "Type": "String"
        },
		"EMRCoreInstanceType": {
            "AllowedValues": [
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge"
            ],
            "Default": "m4.large",
            "Description": "Instance type for the EMR core nodes. Default is m4.large",
            "Type": "String"
        },
		"EMRCoreNodes": {
            "Description": "Number of EMR Core Nodes. Minimum 1",
            "MaxValue": "500",
            "MinValue": "1",
            "Type": "Number",
			"Default": "2"
        },
        "EmrSecurityGroup": {
            "Description": "Talend EMR Security Group.",
            "Type": "String"
        },
        "RemoteAccessEmrSecurityGroup": {
            "Description": "Remote access EMR Security Group.",
            "Type": "String"
        }
    },
    "Mappings": {
    },
    "Conditions": {
        "CreateEmrCondition": {
            "Fn::Equals": [
                { "Ref": "CreateEmr" },
                "true"
            ]
        }
    },
    "Resources": {
        
        "EmrInstance": {
            "Type": "AWS::EMR::Cluster",
            "Condition": "CreateEmrCondition",
            "Properties": {
                "Instances": {
                    "MasterInstanceGroup": {
                        "InstanceCount": 1,
                        "InstanceType": { "Ref": "EMRMasterInstanceType" },
                        "Market": "ON_DEMAND",
                        "Name": "Master"
                    },
                    "CoreInstanceGroup": {
                        "InstanceCount": { "Ref": "EMRCoreNodes" },
                        "InstanceType": { "Ref": "EMRCoreInstanceType" },
                        "Market": "ON_DEMAND",
                        "Name": "Core"
                    },
                    "TerminationProtected": false,
                    "Ec2SubnetId": { "Ref": "EmrSubnetA" },
                    "Ec2KeyName": { "Ref": "KeyPair" },
                    "AdditionalMasterSecurityGroups": [
                        { "Ref": "EmrSecurityGroup" },
                        { "Ref": "RemoteAccessEmrSecurityGroup" }
                    ],
                    "AdditionalSlaveSecurityGroups": [
                        { "Ref": "EmrSecurityGroup" },
                        { "Ref": "RemoteAccessEmrSecurityGroup" }
                    ]
                },
                "Applications": [
                    { "Name": "Hadoop" },
                    { "Name": "Hive" },
                    { "Name": "Pig" },
					{ "Name": "Hue" },
					{ "Name": "HBase" },
					{ "Name": "Sqoop" },
					{ "Name": "ZooKeeper" },
                    { "Name": "Spark" }
                ],
                "LogUri": { "Fn::Sub": "s3://${EmrLogBucket}" },
                "ReleaseLabel": "emr-5.0.0",
                "Name": "EmrInstance",
                "JobFlowRole": "EMR_EC2_DefaultRole",
                "ServiceRole": "EMR_DefaultRole",
                "VisibleToAllUsers": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "emr-instance-${AWS::StackName}"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "EmrClusterId": {
            "Condition": "CreateEmrCondition",
            "Value": { "Ref": "EmrInstance" },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:EmrClusterId" } }
        },
        "EmrMasterPublicDns": {
            "Condition": "CreateEmrCondition",
            "Value": { "Fn::GetAtt": [ "EmrInstance", "MasterPublicDNS" ] },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:EmrMasterPublicDns" } }
        }
    }
}