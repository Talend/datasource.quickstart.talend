{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "EMR + Redshift",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "AWS Security"
                    },
                    "Parameters": [
                        "KeyPair"
                    ]
                },
                {
                    "Label": {
                        "default": "EMR"
                    },
                    "Parameters": [
                        "CreateEmr",
                        "EmrSubnetA",
						"EMRMasterInstanceType",
                        "EMRCoreInstanceType",
						"EMRCoreNodes"
                    ]
                },
                {
                    "Label": {
                        "default": "Redshift Configurations"
                    },
                    "Parameters": [
                        "CreateRedshift",
                        "RedshiftSubnetA",
                        "RedshiftSubnetB",
                        "RedshiftUsername",
                        "RedshiftPassword",
                        "RedshiftDbName",
                        "RedshiftPort",
						"RedshiftNodeType",
						"RedshiftNumberOfNodes"
                    ]
                }
            ]
        }
    },
    "Parameters": {
        "KeyPair": {
            "Description": "Key Name for Instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "CreateRedshift": {
            "Description": "Create Redshift.",
            "Type": "String",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "RedshiftSecurityGroup": {
            "Description": "Redshift security group",
            "Type": "String"
        },
        "RedshiftSubnetA": {
            "Description": "Redshift subnet A",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "RedshiftSubnetB": {
            "Description": "Redshift subnet B",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "RedshiftUsername": {
            "Description": "RedShift Username",
            "Type": "String"
        },
        "RedshiftPassword": {
            "Description": "RedShift Password",
            "NoEcho": true,
            "Type": "String"
        },
        "RedshiftDbName": {
            "Description": "RedShift Database name",
            "Type": "String"
        },
        "RedshiftPort": {
            "Description": "RedShift Port",
            "Type": "String",
            "Default": "5439"
        },
		"RedshiftNodeType": {
            "AllowedValues": [
                "dw1.xlarge",
                "dw1.8xlarge",
                "dw2.large",
                "dw2.8xlarge",
                "dc1.large",
                "dc1.8xlarge",
                "ds1.xlarge",
                "ds1.8xlarge",
                "ds2.xlarge",
                "ds2.8xlarge"
            ],
            "ConstraintDescription": "must be a valid RedShift node type.",
            "Default": "dc1.large",
            "Description": "The node type to for the redshift cluster",
            "Type": "String"
        },
		"RedshiftNumberOfNodes": {
            "Default": "1",
            "Description": "The number of nodes in the redshift cluster.",
            "Type": "Number"
        },
        "CreateEmr": {
            "Description": "Create EMR.",
            "Type": "String",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "EmrSubnetA": {
            "Description": "EMR Subnet A",
            "Type": "AWS::EC2::Subnet::Id"
        },
		"EMRMasterInstanceType": {
            "AllowedValues": [
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge"
            ],
            "Default": "m4.large",
            "Description": "Instance type for the EMR master node. Default is m4.large",
            "Type": "String"
        },
		"EMRCoreInstanceType": {
            "AllowedValues": [
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge"
            ],
            "Default": "m4.large",
            "Description": "Instance type for the EMR core nodes. Default is m4.large",
            "Type": "String"
        },
		"EMRCoreNodes": {
            "Description": "Number of EMR Core Nodes. Minimum 1",
            "MaxValue": "500",
            "MinValue": "1",
            "Type": "Number",
			"Default": "2"
        },
        "EmrSecurityGroup": {
            "Description": "Talend EMR Security Group.",
            "Type": "String"
        },
        "RemoteAccessEmrSecurityGroup": {
            "Description": "Remote access EMR Security Group.",
            "Type": "String"
        }
    },
    "Mappings": {
        "RegionServiceSupport": {
            "us-east-1": {
                "ConfigRules": true,
                "NatGateway": true,
                "Glacier": "GLACIER"
            },
            "us-east-2": {
                "ConfigRules": true,
                "NatGateway": true,
                "Glacier": "GLACIER"
            },
            "us-west-1": {
                "ConfigRules": true,
                "NatGateway": true,
                "Glacier": "GLACIER"
            },
            "us-west-2": {
                "ConfigRules": true,
                "NatGateway": true,
                "Glacier": "GLACIER"
            },
            "ca-central-1": {
                "ConfigRules": false,
                "NatGateway": true,
                "Glacier": "GLACIER"
            },
            "eu-central-1": {
                "NatGateway": true,
                "ConfigRules": true,
                "Glacier": "GLACIER"
            },
            "eu-west-1": {
                "ConfigRules": true,
                "NatGateway": true,
                "Glacier": "GLACIER"
            },
            "eu-west-2": {
                "ConfigRules": false,
                "NatGateway": true,
                "Glacier": "GLACIER"
            },
            "ap-northeast-1": {
                "ConfigRules": true,
                "NatGateway": true,
                "Glacier": "GLACIER"
            },
            "ap-northeast-2": {
                "ConfigRules": true,
                "NatGateway": true,
                "Glacier": "GLACIER"
            },
            "ap-south-1": {
                "ConfigRules": false,
                "NatGateway": true,
                "Glacier": "GLACIER"
            },
            "ap-southeast-1": {
                "ConfigRules": true,
                "NatGateway": true,
                "Glacier": "STANDARD_IA"
            },
            "ap-southeast-2": {
                "ConfigRules": true,
                "NatGateway": true,
                "Glacier": "GLACIER"
            },
            "sa-east-1": {
                "ConfigRules": false,
                "NatGateway": true,
                "Glacier": "STANDARD_IA"
            },
            "us-gov-west-1": {
                "ConfigRules": false,
                "NatGateway": false,
                "Glacier": "STANDARD_IA"
            }
        }
    },
    "Conditions": {
		"IsMultiNodeCluster": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "RedshiftNumberOfNodes"
                        },
                        "1"
                    ]
                }
            ]
        },
        "IsGovCloud": {
            "Fn::Equals": [
                { "Ref": "AWS::Region" },
                "us-gov-west-1"
            ]
        },
        "CreateRedshiftCondition": {
            "Fn::Equals": [
                { "Ref": "CreateRedshift" },
                "true"
            ]
        },
        "CreateEmrCondition": {
            "Fn::Equals": [
                { "Ref": "CreateEmr" },
                "true"
            ]
        }
    },
    "Resources": {
        "TalendSourceBucket": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "AccessControl": "Private",
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "Id": "Transition90daysRetain7yrs",
                            "Status": "Enabled",
                            "ExpirationInDays": 2555,
                            "Transition": {
                                "TransitionInDays": 90,
                                "StorageClass": {
                                    "Fn::FindInMap": [
                                        "RegionServiceSupport",
                                        { "Ref": "AWS::Region" },
                                        "Glacier"
                                    ]
                                }
                            }
                        }
                    ]
                },
                "VersioningConfiguration": {
                    "Status": "Enabled"
                }
            }
        },
        "TalendTargetBucket": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "AccessControl": "Private",
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "Id": "Transition90daysRetain7yrs",
                            "Status": "Enabled",
                            "ExpirationInDays": 2555,
                            "Transition": {
                                "TransitionInDays": 90,
                                "StorageClass": {
                                    "Fn::FindInMap": [
                                        "RegionServiceSupport",
                                        { "Ref": "AWS::Region" },
                                        "Glacier"
                                    ]
                                }
                            }
                        }
                    ]
                },
                "VersioningConfiguration": {
                    "Status": "Enabled"
                }
            }
        },
        "TalendSourceS3Policy": {
            "Type": "AWS::S3::BucketPolicy",
            "DependsOn": "TalendSourceBucket",
            "Properties": {
                "Bucket": {
                    "Ref": "TalendSourceBucket"
                },
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Sid": "AllowFullAccess",
                            "Action": "s3:*",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Resource": {
                                "Fn::Sub": [
                                    "arn:${Endpoint}:s3:::${TalendSourceBucket}",
                                    {
                                        "Endpoint": {
                                            "Fn::If": [
                                                "IsGovCloud",
                                                "aws-us-gov",
                                                "aws"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "TalendTargetS3Policy": {
            "Type": "AWS::S3::BucketPolicy",
            "DependsOn": "TalendTargetBucket",
            "Properties": {
                "Bucket": {
                    "Ref": "TalendTargetBucket"
                },
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Sid": "AllowFullAccess",
                            "Action": "s3:*",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Resource": {
                                "Fn::Sub": [
                                    "arn:${Endpoint}:s3:::${TalendTargetBucket}",
                                    {
                                        "Endpoint": {
                                            "Fn::If": [
                                                "IsGovCloud",
                                                "aws-us-gov",
                                                "aws"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        
        "RedshiftSubnetGroup": {
            "Type": "AWS::Redshift::ClusterSubnetGroup",
            "Condition": "CreateRedshiftCondition",
            "Properties": {
                "Description": "RedShift Subnet linked to both private database subnets",
                "SubnetIds": [
                    { "Ref": "RedshiftSubnetA" },
                    { "Ref": "RedshiftSubnetB" }
                ]
            }
        },
        "RedshiftInstance": {
            "Type": "AWS::Redshift::Cluster",
            "Condition": "CreateRedshiftCondition",
            "DependsOn": [ "RedshiftSubnetGroup" ],
            "Properties": {
                "ClusterSubnetGroupName": { "Ref": "RedshiftSubnetGroup" },
                "ClusterType": {
                    "Fn::If": [
                        "IsMultiNodeCluster",
                        "multi-node",
                        "single-node"
                    ]
                },
                "NodeType": { "Ref": "RedshiftNodeType" },
				"NumberOfNodes": {
                    "Fn::If": [
                        "IsMultiNodeCluster",
                        {
                            "Ref": "RedshiftNumberOfNodes"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "VpcSecurityGroupIds": [ { "Ref": "RedshiftSecurityGroup" } ],
                "DBName": { "Ref": "RedshiftDbName" },
                "MasterUsername": { "Ref": "RedshiftUsername" },
                "MasterUserPassword": { "Ref": "RedshiftPassword" },
                "Port": { "Ref": "RedshiftPort" },
                "PubliclyAccessible": false
            }
        },
        
        "EmrLogBucket": {
            "Type": "AWS::S3::Bucket",
            "Condition": "CreateEmrCondition",
            "DeletionPolicy": "Retain",
            "Properties": {
                "AccessControl": "Private",
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "Id": "Transition90daysRetain7yrs",
                            "Status": "Enabled",
                            "ExpirationInDays": 2555,
                            "Transition": {
                                "TransitionInDays": 90,
                                "StorageClass": {
                                    "Fn::FindInMap": [
                                        "RegionServiceSupport",
                                        { "Ref": "AWS::Region" },
                                        "Glacier"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },
        "EmrInstance": {
            "Type": "AWS::EMR::Cluster",
            "Condition": "CreateEmrCondition",
            "Properties": {
                "Instances": {
                    "MasterInstanceGroup": {
                        "InstanceCount": 1,
                        "InstanceType": { "Ref": "EMRMasterInstanceType" },
                        "Market": "ON_DEMAND",
                        "Name": "Master"
                    },
                    "CoreInstanceGroup": {
                        "InstanceCount": { "Ref": "EMRCoreNodes" },
                        "InstanceType": { "Ref": "EMRCoreInstanceType" },
                        "Market": "ON_DEMAND",
                        "Name": "Core"
                    },
                    "TerminationProtected": false,
                    "Ec2SubnetId": { "Ref": "EmrSubnetA" },
                    "Ec2KeyName": { "Ref": "KeyPair" },
                    "AdditionalMasterSecurityGroups": [
                        { "Ref": "EmrSecurityGroup" },
                        { "Ref": "RemoteAccessEmrSecurityGroup" }
                    ],
                    "AdditionalSlaveSecurityGroups": [
                        { "Ref": "EmrSecurityGroup" },
                        { "Ref": "RemoteAccessEmrSecurityGroup" }
                    ]
                },
                "Applications": [
                    { "Name": "Hadoop" },
                    { "Name": "Hive" },
                    { "Name": "Pig" },
					{ "Name": "Hue" },
					{ "Name": "HBase" },
					{ "Name": "Sqoop" },
					{ "Name": "ZooKeeper" },
                    { "Name": "Spark" }
                ],
                "LogUri": { "Fn::Sub": "s3://${EmrLogBucket}" },
                "ReleaseLabel": "emr-5.0.0",
                "Name": "EmrInstance",
                "JobFlowRole": "EMR_EC2_DefaultRole",
                "ServiceRole": "EMR_DefaultRole",
                "VisibleToAllUsers": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "emr-instance-${AWS::StackName}"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "TalendSourceBucket": {
            "Value": { "Ref": "TalendSourceBucket" },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:TalendSourceBucket" } }
        },
        "TalendTargetBucket": {
            "Value": { "Ref": "TalendTargetBucket" },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:TalendTargetBucket" } }
        },
        "EmrLogBucket": {
            "Condition": "CreateEmrCondition",
            "Value": { "Fn::GetAtt": [ "EmrLogBucket", "DomainName" ] },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:EmrLogBucket" } }
        },
        "EmrMasterPublicDns": {
            "Condition": "CreateEmrCondition",
            "Value": { "Fn::GetAtt": [ "EmrInstance", "MasterPublicDNS" ] },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:EmrMasterPublicDns" } }
        },
        "RedshiftEndpoint": {
            "Condition": "CreateRedshiftCondition",
            "Value": { "Fn::GetAtt": [ "RedshiftInstance", "Endpoint.Address" ] },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:RedshiftEndpoint" } }
        },
        "RedshiftPort": {
            "Condition": "CreateRedshiftCondition",
            "Value": { "Fn::GetAtt": [ "RedshiftInstance", "Endpoint.Port" ] },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:RedshiftPort" } }
        },
        "RedshiftJdbcUrl": {
            "Condition": "CreateRedshiftCondition",
            "Value": { "Fn::Sub": "jdbc:redshift://${RedshiftInstance.Endpoint.Address}:${RedshiftInstance.Endpoint.Port}/${RedshiftDbName}" },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:RedshiftJdbcUrl" } }
        }
    }
}